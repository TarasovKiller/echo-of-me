import { ChatOpenAI } from '@langchain/openai';
import { PromptTemplate } from '@langchain/core/prompts';
import { RunnableSequence } from '@langchain/core/runnables';
import { JsonOutputParser } from '@langchain/core/output_parsers';
import { LifeProfile } from '../../types/life';
import { Dilemma } from '../../types/dilemma';

// üéØ –ü—Ä–æ–º–ø—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–∏–ª–µ–º–º—ã
const DILEMMA_GENERATION_PROMPT = PromptTemplate.fromTemplate(`
–¢—ã —Å–æ–∑–¥–∞—ë—à—å **–∂–∏–∑–Ω–µ–Ω–Ω—É—é –¥–∏–ª–µ–º–º—É**, —Å –∫–æ—Ç–æ—Ä–æ–π –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å —Å—Ç–∞–ª–∫–∏–≤–∞–µ—Ç—Å—è –ø–æ–¥—Ä–æ—Å—Ç–æ–∫ –ø–æ –∏–º–µ–Ω–∏ {name} –≤ –≤–æ–∑—Ä–∞—Å—Ç–µ {age} –ª–µ—Ç.

–í–æ—Ç –µ–≥–æ —Ç–µ–∫—É—â–∏–π –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –ø–æ—Ä—Ç—Ä–µ—Ç:
{lifeContext}

–ö–æ–Ω—Ç–µ–∫—Å—Ç —Å—Ç—Ä–∞–Ω—ã:
{countryContext}

–ö–æ–Ω—Ç–µ–∫—Å—Ç –≥–æ—Ä–æ–¥–∞/–¥–µ—Ä–µ–≤–Ω–∏:
{settlementContext}

–ö–æ–Ω—Ç–µ–∫—Å—Ç —Å–µ–º—å–∏:
{familyContext}

–ö–æ–Ω—Ç–µ–∫—Å—Ç —Å–æ—Ü–∏–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ:
{socialContext}

---

–¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –ø—Ä–∏–¥—É–º–∞—Ç—å **–æ–¥–Ω—É –¥–∏–ª–µ–º–º—É**, –ø—Ä–æ–∏—Å—Ö–æ–¥—è—â—É—é "–∑–¥–µ—Å—å –∏ —Å–µ–π—á–∞—Å".  
{name} –¥–æ–ª–∂–µ–Ω –æ–∫–∞–∑–∞—Ç—å—Å—è –≤ —Å–∏—Ç—É–∞—Ü–∏–∏, –≥–¥–µ –µ–º—É –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –≤—ã–±–æ—Ä, –∏ —ç—Ç–æ—Ç –≤—ã–±–æ—Ä –±—É–¥–µ—Ç –≤–ª–∏—è—Ç—å –Ω–∞ –µ–≥–æ –¥–∞–ª—å–Ω–µ–π—à—É—é –∂–∏–∑–Ω—å.

–î–∏–ª–µ–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å:
- **–†–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ–π** ‚Äî –∫–∞–∫ –∏–∑ –Ω–∞—Å—Ç–æ—è—â–µ–π –∂–∏–∑–Ω–∏ –ø–æ–¥—Ä–æ—Å—Ç–∫–∞
- **–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ –∑–Ω–∞—á–∏–º–æ–π** ‚Äî –∑–∞—Ç—Ä–∞–≥–∏–≤–∞—Ç—å –µ–≥–æ —Å—Ç—Ä–∞—Ö–∏, –∂–µ–ª–∞–Ω–∏—è, —Ü–µ–Ω–Ω–æ—Å—Ç–∏
- **–ö–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π** ‚Äî –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∞—è —Å–∏—Ç—É–∞—Ü–∏—è, –∞ –Ω–µ –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞
- **–í–æ–∑—Ä–∞—Å—Ç–Ω–æ–π** ‚Äî –ø–æ–¥—Ö–æ–¥—è—â–µ–π –¥–ª—è {age} –ª–µ—Ç
- **–ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–π** ‚Äî —Å–≤—è–∑–∞–Ω–Ω–æ–π —Å –µ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏–µ–º –∏ –æ–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤–∞–º–∏

---

üì¶ –§–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ ‚Äî —Å—Ç—Ä–æ–≥–æ JSON:

{{
  "situation": string (–æ–ø–∏—Å–∞–Ω–∏–µ —Å–∏—Ç—É–∞—Ü–∏–∏),
  "question": string (–≤–æ–ø—Ä–æ—Å, –∫–æ—Ç–æ—Ä—ã–π –∑–∞–¥–∞—ë—Ç {name}),
  "importance": number (1-10, –≤–∞–∂–Ω–æ—Å—Ç—å –¥–∏–ª–µ–º–º—ã),
  "relatedTraits": string[] (–∫–∞–∫–∏–µ —á–µ—Ä—Ç—ã —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∞ –∑–∞—Ç—Ä–æ–Ω—É—Ç—ã),
  "context": string (–¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç),
  "stakes": {{
    "immediate": string (—á—Ç–æ –ø—Ä–æ–∏–∑–æ–π–¥—ë—Ç —Å—Ä–∞–∑—É),
    "longTerm": string (–∫–∞–∫ —ç—Ç–æ –ø–æ–≤–ª–∏—è–µ—Ç –Ω–∞ –±—É–¥—É—â–µ–µ),
    "emotional": string (—ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è)
  }},
  "choices": [
    {{
      "description": string,
      "pros": string[],
      "cons": string[],
      "alignedTraits": string[],
      "conflictingTraits": string[]
    }}
  ]
}}

‚ö†Ô∏è –¢–æ–ª—å–∫–æ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π JSON –±–µ–∑ Markdown, –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –∏–ª–∏ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤.
`);

// üéØ –ü—Ä–æ–º–ø—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –¥–∏–ª–µ–º–º—ã
const CONTEXT_GENERATION_PROMPT = PromptTemplate.fromTemplate(`
–¢—ã —Å–æ–∑–¥–∞—ë—à—å **–∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é** –¥–ª—è –¥–∏–ª–µ–º–º—ã –ø–æ–¥—Ä–æ—Å—Ç–∫–∞ –ø–æ –∏–º–µ–Ω–∏ {name}.

–í–æ—Ç –µ–≥–æ –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –ø–æ—Ä—Ç—Ä–µ—Ç:
{lifeContext}

---

–°–≥–µ–Ω–µ—Ä–∏—Ä—É–π –∫–æ–Ω—Ç–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç –ø–æ–Ω—è—Ç—å:
1. **–ü–æ—á–µ–º—É —ç—Ç–∞ –¥–∏–ª–µ–º–º–∞ –≤–æ–∑–Ω–∏–∫–ª–∞ –∏–º–µ–Ω–Ω–æ —Å–µ–π—á–∞—Å?**
2. **–ö–∞–∫–∏–µ —Å–æ–±—ã—Ç–∏—è –ø—Ä–∏–≤–µ–ª–∏ –∫ —ç—Ç–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏?**
3. **–ö—Ç–æ –µ—â—ë —É—á–∞—Å—Ç–≤—É–µ—Ç –∏ –∫–∞–∫ –æ–Ω–∏ –≤–ª–∏—è—é—Ç –Ω–∞ –≤—ã–±–æ—Ä?**
4. **–ö–∞–∫–∏–µ –≤–Ω–µ—à–Ω–∏–µ —Ñ–∞–∫—Ç–æ—Ä—ã –¥–∞–≤—è—Ç –Ω–∞ {name}?**

---

üì¶ –§–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ ‚Äî —Å—Ç—Ä–æ–≥–æ JSON:

{{
  "background": string (—á—Ç–æ –ø—Ä–∏–≤–µ–ª–æ –∫ —Å–∏—Ç—É–∞—Ü–∏–∏),
  "participants": [
    {{
      "name": string,
      "role": string,
      "influence": string,
      "expectations": string
    }}
  ],
  "externalPressure": string[] (–≤–Ω–µ—à–Ω–∏–µ —Ñ–∞–∫—Ç–æ—Ä—ã),
  "timeline": string (–∫–æ–≥–¥–∞ –Ω—É–∂–Ω–æ –ø—Ä–∏–Ω—è—Ç—å —Ä–µ—à–µ–Ω–∏–µ),
  "consequences": {{
    "immediate": string[],
    "shortTerm": string[],
    "longTerm": string[]
  }}
}}

‚ö†Ô∏è –¢–æ–ª—å–∫–æ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π JSON –±–µ–∑ Markdown, –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –∏–ª–∏ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤.
`);

export class DilemmaGenerationChain {
  private model: ChatOpenAI;
  private jsonParser: JsonOutputParser;

  constructor(apiKey: string, model = 'gpt-4o-mini') {
    this.model = new ChatOpenAI({
      apiKey,
      model,
      configuration: {
        baseURL: process.env.OPENAI_BASE_URL || 'https://openrouter.ai/api/v1',
        defaultHeaders: {
          'HTTP-Referer': process.env.HTTP_REFERER || 'http://localhost:3000',
          'X-Title': 'echo-of-me',
        },
      },
    });
    this.jsonParser = new JsonOutputParser();
  }

  /**
   * üéØ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–∏–ª–µ–º–º—ã —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º
   */
  async generateDilemma(
    lifeProfile: LifeProfile,
    countryContext: string,
    settlementContext: string,
    familyContext: string,
    socialContext: string
  ): Promise<Dilemma> {
    try {
      // –§–æ—Ä–º–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –∂–∏–∑–Ω–∏
      const lifeContext = this.formatLifeContext(lifeProfile);

      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –¥–∏–ª–µ–º–º—É
      const dilemmaChain = RunnableSequence.from([
        DILEMMA_GENERATION_PROMPT,
        this.model,
        this.jsonParser,
      ]);

      const dilemmaResult = await dilemmaChain.invoke({
        name: lifeProfile.name,
        age: lifeProfile.age,
        lifeContext,
        countryContext,
        settlementContext,
        familyContext,
        socialContext,
      });

      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç
      const contextChain = RunnableSequence.from([
        CONTEXT_GENERATION_PROMPT,
        this.model,
        this.jsonParser,
      ]);

      const contextResult = await contextChain.invoke({
        name: lifeProfile.name,
        lifeContext,
      });

      // –û–±—ä–µ–¥–∏–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
      const fullDilemma: Dilemma = {
        situation: dilemmaResult.situation,
        question: dilemmaResult.question,
        importance: dilemmaResult.importance,
        relatedTraits: dilemmaResult.relatedTraits,
        context: contextResult.background,
        stakes: dilemmaResult.stakes,
        choices: dilemmaResult.choices,
        participants: contextResult.participants,
        externalPressure: contextResult.externalPressure,
        timeline: contextResult.timeline,
        consequences: contextResult.consequences,
      };

      console.log('‚úÖ –î–∏–ª–µ–º–º–∞ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞:', fullDilemma.situation);
      return fullDilemma;
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–∏–ª–µ–º–º—ã:', error);
      throw new Error(`–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥–∏–ª–µ–º–º—ã: ${error}`);
    }
  }

  /**
   * üìù –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∂–∏–∑–Ω–∏ –¥–ª—è –ø—Ä–æ–º–ø—Ç–∞
   */
  private formatLifeContext(lifeProfile: LifeProfile): string {
    return `
–ò–º—è: ${lifeProfile.name}
–í–æ–∑—Ä–∞—Å—Ç: ${lifeProfile.age}
–ü–æ–ª: ${lifeProfile.gender}

–§–∏–ª–æ—Å–æ—Ñ–∏—è: "${lifeProfile.philosophy}"
–°–∞–º–æ–æ–ø–∏—Å–∞–Ω–∏–µ: "${lifeProfile.selfNarrative}"

–ß–µ—Ä—Ç—ã —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∞:
${Object.entries(lifeProfile.coreTraits)
  .map(([trait, value]) => `- ${trait}: ${value}/100`)
  .join('\n')}

–°–∫—Ä—ã—Ç–æ–µ –∂–µ–ª–∞–Ω–∏–µ: "${lifeProfile.hiddenDesire}"
–ì–ª–∞–≤–Ω—ã–π —Å—Ç—Ä–∞—Ö: "${lifeProfile.coreFear}"
–ú–æ—Ä–∞–ª—å–Ω—ã–π –∫–æ–º–ø–∞—Å: "${lifeProfile.moralCompass.value}" (—É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å: ${lifeProfile.moralCompass.stability}/100)
–û—Å–æ–∑–Ω–∞–Ω–∏–µ –∂–µ–ª–∞–Ω–∏—è: ${lifeProfile.awarenessLevel}

–ö—É–ª—å—Ç—É—Ä–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç:
- –†–µ–≥–∏–æ–Ω: ${lifeProfile.culture.regionName}
- –°–µ–º–µ–π–Ω—ã–π —É–∫–ª–∞–¥: ${lifeProfile.culture.household}
- –¶–µ–Ω–Ω–æ—Å—Ç–∏: ${lifeProfile.culture.values.join(', ')}
- –ê—Ç–º–æ—Å—Ñ–µ—Ä–∞: ${lifeProfile.atmosphere}
    `.trim();
  }
} 