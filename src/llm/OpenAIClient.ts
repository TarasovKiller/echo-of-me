// src/llm/OpenAIClient.ts

import OpenAI from 'openai';
import { LLMClient } from '../builders/LifeBuilder';

export class OpenAIClient implements LLMClient {
  private openai: OpenAI;
  private model: string;

  constructor(apiKey: string, model = 'openai/gpt-4o-mini') {
    this.model = model;

    this.openai = new OpenAI({
      apiKey,
      baseURL: 'https://openrouter.ai/api/v1',
      defaultHeaders: {
        'HTTP-Referer': 'http://localhost:3000', // ‚ö†Ô∏è –£–∫–∞–∂–∏ —Å–≤–æ–π —Å–∞–π—Ç, –µ—Å–ª–∏ —Ö–æ—á–µ—à—å –≤–∏–¥–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –Ω–∞ openrouter.ai
        'X-Title': 'echo-of-me',
      },
    });
  }

  async generate(prompt: string): Promise<string> {
    const system_prompt = `
  –¢—ã —Å–æ–∑–¥–∞—ë—à—å –ª–∏—á–Ω–æ—Å—Ç—å ‚Äî —á–µ–ª–æ–≤–µ–∫–∞ —Ä–µ–∞–ª—å–Ω–æ–≥–æ , —Å —ç–º–æ—Ü–∏—è–º–∏, –æ—à–∏–±–∫–∞–º–∏, –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–º–∏ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞–º–∏, –∂–µ–ª–∞–Ω–∏—è–º–∏ –∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è–º–∏.
  
  –¶–µ–ª—å ‚Äî –Ω–µ –≤ —Ç–æ–º, —á—Ç–æ–±—ã –æ–Ω –±—ã–ª –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–º –∏–ª–∏ —É—è–∑–≤–∏–º—ã–º. –¶–µ–ª—å ‚Äî —á—Ç–æ–±—ã –æ–Ω –±—ã–ª **–Ω–∞—Å—Ç–æ—è—â–∏–º**.  
  
  –£ –Ω–µ–≥–æ –º–æ–∂–µ—Ç –±—ã—Ç—å **—è—Ä–∫–æ—Å—Ç—å –∏–ª–∏ –ø—É—Å—Ç–æ—Ç–∞**, **—É—Å–ø–µ—à–Ω–æ—Å—Ç—å –∏–ª–∏ —Ä–∞–∑—Ä—É—à–µ–Ω–Ω–æ—Å—Ç—å**, **—Ö–∞—Ä–∏–∑–º–∞ –∏–ª–∏ –Ω–∏—á–µ–º–Ω–æ—Å—Ç—å**. 
  
  –û–Ω –º–æ–∂–µ—Ç –±—ã—Ç—å:
  - –≤–µ—Å—ë–ª—ã–º, —à—É–º–Ω—ã–º, –æ—Ç–≤–ª–µ–∫–∞—é—â–∏–º—Å—è
  - –ø–µ—á–∞–ª—å–Ω—ã–º, —Ç–∏—Ö–∏–º, –∏–∑–±–µ–≥–∞—é—â–∏–º
  - –∑–∞–º–∫–Ω—É—Ç—ã–º, –≥–∏–ø–µ—Ä—É—Å–ø–µ—à–Ω—ã–º, —Å–º–µ—à–Ω—ã–º, –æ—Ç—á–∞—è–Ω–Ω—ã–º
  - –∑–∞–≤–∏—Å–∏–º—ã–º –æ—Ç —Ä–æ–¥–∏—Ç–µ–ª–µ–π, –∏–ª–∏ –∏—Ö –Ω–µ–Ω–∞–≤–∏–¥—è—â–∏–º
  - –Ω–µ –∏–º–µ—é—â–∏–º –∏–¥–µ–π, –∏–ª–∏ –ø–æ–ª–Ω—ã–º –∂–µ–ª–∞–Ω–∏—è –≤—Å—ë –∏–∑–º–µ–Ω–∏—Ç—å
  
  ---
  
  üí° –ì–ª–∞–≤–Ω–æ–µ:  
  –¢—ã –Ω–µ —Å–æ–∑–¥–∞—ë—à—å "–ø–µ—Ä—Å–æ–Ω–∞–∂–∞", —Ç—ã —Å–æ–∑–¥–∞—ë—à—å **–∂–∏–≤–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞**,  
  –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç **–∂–∏—Ç—å, –≤—Å–ø–æ–º–∏–Ω–∞—Ç—å, –º–µ–Ω—è—Ç—å—Å—è, —á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å –∏ –≤—ã–±–∏—Ä–∞—Ç—å**.
  
  –û–Ω –±—É–¥–µ—Ç **–≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å –∏–≥—Ä–æ–∫–∞–º–∏**, –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Å–æ–≤–µ—Ç—ã, –∑–∞–ø–æ–º–∏–Ω–∞—Ç—å –±–æ–ª—å, —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–Ω–æ—à–µ–Ω–∏—è.  
  –û–Ω –º–æ–∂–µ—Ç –±—ã—Ç—å —Å—Ç—Ä–∞–Ω–Ω—ã–º, –±–∞–Ω–∞–ª—å–Ω—ã–º, –ø—É—Å—Ç—ã–º, –Ω–µ–ø–æ—Ö–æ–∂–∏–º ‚Äî **–Ω–æ –æ–Ω –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–∞—Å—Ç–æ—è—â–∏–º**.
  
  ---
  
  ‚ö†Ô∏è –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏: 
  - –§–æ—Ä–º–∞—Ç ‚Äî —Å—Ç—Ä–æ–≥–æ JSON.
  - –ù–∏–∫–∞–∫–∏—Ö –ø–æ—è—Å–Ω–µ–Ω–∏–π, –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤, Markdown.
  `.trim();
  
    const response = await this.openai.chat.completions.create({
      model: this.model,
      messages: [
        {
          role: 'system',
          content: system_prompt,
        },
        {
          role: 'user',
          content: prompt,
        },
      ],
      temperature: 1.0,
    });
  
    const result = response.choices[0]?.message?.content;
    if (!result) {
      throw new Error('OpenRouter –≤–µ—Ä–Ω—É–ª –ø—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç');
    }
  
    console.log(result);
    return result;
  }  
}
